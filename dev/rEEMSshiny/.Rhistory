install.packages("RSelenium")
library("RSelenium")
vignette("shinytesting", "RSelenium")
?plotOutput
library(shiny)
?plotOutput
req_packages <- c("shiny", "ggplot2", "dplyr")
new_packages <- setdiff(req_packages, installed.packages()[, "Package"])
installed.packages()
x = installed.packages()
class(x)
colnames(x)
installed.packages()[, c("Package", "Version")]
installed.packages()[, c("Package", "Version")]
installed.packages()[c("shiny", "ggplot2", "dplyr"), c("Package", "Version")]
installed.packages()[c("shinyx", "ggplot2x", "dplyr"), c("Package", "Version")]
installed.packages()[, c("Package", "Version")]
installed.packages()[, "Package"]
class(installed.packages()[, "Package"])
installed.packages()[, "Package"]
req_packages %in% installed.packages()[, "Package"]
match(installed.packages()[, "Package"], req_packages)
req_packages %in% installed.packages()[, "Package"]
installed.packages()[, c("Package", "Version")]
?packageVersion
packageVersion("dplyr")
packageVersion("dplyr")
packageVersion("dplyrx")
packageVersion("dplyrx")
file.edit("DESCRIPTION")
packageVersion("shiny")
packageVersion("ggplot2")
0.3-11
packageVersion("dplyr")
q()
q()
q()
shiny::runApp()
shiny::runApp()
runApp()
packageVersion("ggplot2")
packageVersion("dplyr")
packageVersion("shiny")
runApp()
q()
q()
shiny::runApp()
library("RSelenium")
vignette("shinytesting", "RSelenium")
devtools::install_github("testthat", "hadley")
require(shiny)
runApp(paste0(find.package("RSelenium"), "/apps/shinytestapp"), port = 6012)
q()
shiny::runApp()
q()
shiny::runApp()
q()
shiny::runApp()
runApp()
runApp()
runApp()
file.edit("helpers.R")
runApp()
?install.packages
q()
