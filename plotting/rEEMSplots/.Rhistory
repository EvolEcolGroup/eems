library(rEEMSplots)
library(rEEMSplots)
?eems.plots
?eems.voronoi
?eems.posterior.draws
?eems.resid.heatmap
?eems.voronoi
?eems.popgrid
library(rEEMSplots)
?eems.resid.heatmap
?eems.voronoi
?eems.resid.heatmap
library(rEEMSplots)
?rEEMSplots
?eems.resid.heatmap
library(rEEMSplots)
?rEEMSplots
?eems.resid.heatmap
library(rEEMSplots)
library(rEEMSplots)
?eems.resid.heatmap
?eems.voronoi.samples
?eems.population.grid
?eems.plots
library(rEEMSplots)
?rEEMSplots
?eems.plots
library(rEEMSplots)
?rEEMSplots
library(rEEMSplots)
?rEEMSplots
library(rEEMSplots)
library(rEEMSplots)
?rEEMSplots
?eems.plots
## Use the provided example or supply the path to your own EEMS run.
eems.results.to.plot = paste0(path.package("rEEMSplots"), "/extdata/EEMS-example")
name.figures.to.save = path.expand("~/EEMS-example-rEEMSplots")
## Produce the five EEMS figures, with default values for all optional parameters.
eems.plots(mcmcpath = eems.results.to.plot,
plotpath = paste0(name.figures.to.save, "-default"),
longlat = TRUE)
q()
library(rEEMSplots)
?eems.voroni.samples
?eems.voroni.samples
?eems.voronoi.samples
## Use the provided example or supply the path to your own EEMS run.
eems.results.to.plot = paste0(path.package("rEEMSplots"), "/extdata/EEMS-example", sep = "")
name.figures.to.save = path.expand("~/EEMS-example-rEEMSplots")
library("deldir")
## Plot a series of Voronoi diagrams for the EEMS model parameters:
## the effective migration rates (m) and the effective diversity rates (q).
eems.voronoi.samples(mcmcpath = eems.results.to.plot,
plotpath = paste0(name.figures.to.save, "-voronoi-diagrams"),
longlat = TRUE, post.draws = 10)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
path.expand()
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
path = c("a", "b", "c")
paste0(path, c('/rdistoDemes.txt'))
paste0(path, c('/rdistoDemes.txt', '/xxx.txt', '/zzz.txt'))
paste0(path, c('/rdistoDemes.txt', '/xxx.txt', '/zzz.txt' '/yyy.txt'))
?file.exists
JtDJ <- read.table("~/Documents/School/Classes/migration/QuestionsAnswers/interpretation2/EEMS_BFT/msats/wild-eems-ndemes500-connectchain10/rdistJtDhatJ.txt")
JtDJ <- read.table("~/Documents/School/Classes/migration/QuestionsAnswers/interpretation2/EEMS_BFT/msats/wild-eems-ndemes500-connectchain10/rdistJtDobsJ.txt")
JtDJ
library(rEEMSplots)
library(rEEMSplots)
q()
library(rEEMSplots)
library(rEEMSplots)
q()
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
x = list(a = 1:12)
x$b
a = NULL
b = NULL
a + b
a
b
b = 1
a + b
a
b
a = NA
a + b
a = NULL
b = 1
a + b
a
b
NULL + NULL
matrix(0, dimns$nxmrks, dimns$nymrks) + NULL
matrix(0, 4, 4) + NULL
library(RColorBrewer)
display.brewer.all()
brewer.pal(3, "Grays")
brewer.pal( "Grays", 3)
brewer.pal(3, "Grays")
brewer.pal(3, "Greys")
brewer.pal(9, "Greys")
brewer.pal(9, "Greys")[2:8]
x = brewer.pal(9, "Greys")[2:8]
plot(1:12, col = x)
plot(1:12, col = x, pch = 19)
x = brewer.pal(9, "Greys")[2:8]
x
library(RColorBrewer)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
rev(1:12)
8:2
RColorBrewer::brewer.pal(9, "Greys")[8:2]
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
q()
direction = "<"
paste("xxx", " ", direction)
library(rEEMSplots)
library(rEEMSplots)
install.packages("RcppArmadillo")
install.packages("repr")
?plot.window
library(dplyr)
library(tidyr)
library(Lahman)
library(ggplot2)
theme_set(theme_bw())
library(rEEMSplots)
ines
library(rEEMSplots)
?plot.window
library(rEEMSplots)
range(c(1, 2))
?range
diff(c(1, 2))
range(1:12)
diff(1:12)
diff(range(1:12))
?plot.window
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
plot(1:12, pch = 19, col = "#F0F0F0")
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
?axis
library(rEEMSplots)
library(rEEMSplots)
seq(0, 1, 8)
seq(from = 0, to = 1, length = 8)
1/8
seq(from = 0, to = 1, length = 7)
seq(from = 0, to = 1, length.out = 9)
RColorBrewer::brewer.pal(4, "Greys")
RColorBrewer::brewer.pal(9, "Greys")
plot(1:12, pch = 19, col = "#FFFFFF")
plot(1:12, pch = 19, col = "#000000")
seq(from = 0, to = 1, length.out = 6)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
q()
plot(1:20, pch = 19, col = gray.colors(19))
plot(1:20, pch = 19, col = gray.colors(19))
?eems.plots
prob.levels = -12:12
prob.levels = prob.levels / 10
prob.levels
prob.levels[prob.levels >= 0 & prob.levels <= 1]
?distinct
prob.levels <- prob.levels[prob.levels >= 0 & prob.levels <= 1]
prob.levels <- sort(unique(c(0, prob.levels, 1)))
prob.levels
gray.colors(length(prob.levels) - 1)
q()
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
q()
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
?log10
library(rEEMSplots)
?eems.plots
?eems.plots
library(rEEMSplots)
q()
library(rEEMSplots)
?eems.plots
## Use the provided example or supply the path to your own EEMS run.
eems.results.to.plot = paste0(path.package("rEEMSplots"), "/extdata/EEMS-example")
name.figures.to.save = path.expand("~/EEMS-example-rEEMSplots")
## Produce the five EEMS figures, with default values for all optional parameters.
eems.plots(mcmcpath = eems.results.to.plot,
plotpath = paste0(name.figures.to.save, "-default"),
longlat = TRUE)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
q()
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
q()
eems.colors <- c("#994000", "#CC5800", "#FF8F33", "#FFAD66", "#FFCA99", "#FFE6CC", ## orange sequence
"#FBFBFB", ## very slightly off-white
"#CCFDFF", "#99F8FF", "#66F0FF", "#33E4FF", "#00AACC", "#007A99") ## blue sequence
plot(1:12, pch = 19, col = eems.colors[1])
plot(1:12, pch = 19, col = eems.colors[2])
length(eems.colors)
prob.levels = c(0, 0.5, 0.8, 0.9, 1)
setdiff(prob.levels, 1)
max(setdiff(prob.levels, 1))
eems.colors
eems.colors[c(1, 7, 13)]
alpha = max(setdiff(prob.levels, 1))
c(-1, - alpha, alpha, 1)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
alpha = 0.9
(1 - alpha)/2
1 - (1 - alpha)/2
(alpha - 1)/2
1 - (alpha - 1)/2
1 - (alpha)/2
(1 + alpha)/2
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
q()
alpha = 2
alpha = 0.95
(1 - alpha) / 2
(1 - alpha) * 2
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
x = matrix(rnorm(18), 6, 3)
x
x[x < 0 ] = -1
x
library(rEEMSplots)
library(rEEMSplots)
prob.levels = 1:10/10
prob.levels
prob.levels <- prob.levels[prob.levels > 0.5 & prob.levels < 1]
prob.levels <- prob.levels[prob.levels > 0.5 & prob.levels < 1]
prob.levels <- prob.levels[prob.levels > 0.5 & prob.levels < 1]
prob.levels
prob.levels <- sort(unique(prob.levels))
c(0, 1 - prob.levels, prob.levels, 1)
c(0, 1 - rev(prob.levels), prob.levels, 1)
prob.levels = c(0.8, 0.9, 0.95)
prob.levels <- prob.levels[prob.levels > 0.5 & prob.levels < 1]
prob.levels <- sort(unique(prob.levels))
prob.levels <- c(0, 1 - rev(prob.levels), prob.levels, 1)
prob.levels
q()
?colorRampPalette
default.eems.colors()
default.eems.colors <- function( ) {
writeLines(paste0("Using the default DarkOrange to Blue color scheme, with 'white' as the midpoint color.\n",
"It combines two color schemes from the 'dichromat' package, which itself is based on\n",
"a collection of color schemes for scientific data graphics:\n",
"\tLight A and Bartlein PJ (2004). The End of the Rainbow? Color Schemes for Improved Data\n",
"\tGraphics. EOS Transactions of the American Geophysical Union, 85(40), 385.\n",
"See also http://geog.uoregon.edu/datagraphics/color_scales.htm\n\n\n"))
## To reproduce the default eems colors:
## Oranges <- dichromat::colorschemes$BluetoDarkOrange.12[12:7]
## Blues <- dichromat::colorschemes$BrowntoBlue.12[7:12]
## eems.colors <- c(Oranges, "#FBFBFB", Blues)
eems.colors <- c("#994000", "#CC5800", "#FF8F33", "#FFAD66", "#FFCA99", "#FFE6CC", ## orange sequence
"#FBFBFB", ## very slightly off-white
"#CCFDFF", "#99F8FF", "#66F0FF", "#33E4FF", "#00AACC", "#007A99") ## blue sequence
return (eems.colors)
}
prob.colors <- default.eems.colors()
prob.colors
?colorRampPalette
n = 9
colorRampPalette(default.eems.colors())(n)
plot(1:20, pch = 19, col = colorRampPalette(default.eems.colors())(n))
colorRamp(c("red", "green"))( (0:4)/4 )
colorRamp(c("red", "green"))(2)
colorRampPalette(c("blue", "red"))( 4 )
plot(1:20, pch = 19, col = colorRampPalette(default.eems.colors())(n))
plot(1:20, pch = 19, col = colorRampPalette(default.eems.colors())(20))
plot(1:20, pch = 19, col = colorRampPalette(default.eems.colors())(5))
prob.levels
prob.levels = c(0.9, 0.95)
c(paste("P(m < 0) = ", prob.levels), paste("P(m > 0 = ", prob.levels))
c(paste("P(m < 0) = ", prob.levels), paste("P(m > 0) = ", prob.levels))
c(paste("P(m < 0) = ", c(1, rev(prob.levels)),
paste("P(m > 0) = ", c(prob.levels, 1)))
)
c(paste("P(m < 0) = ", c(1, rev(prob.levels)),
paste("P(m > 0) = ", c(prob.levels, 1))))
paste("P(m < 0) = ", c(1, rev(prob.levels))
)
paste("P(m < 0) = ", c(1, rev(prob.levels)))
c(paste("P(m < 0) = ", c(1, rev(prob.levels))),
paste("P(m > 0) = ", c(prob.levels, 1)))
library(rEEMSplots)
library(rEEMSplots)
?axis
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
install.packages("mosaic")
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
?eems.plots
library(rEEMSplots)
library(rEEMSplots)
q()
library(rEEMSplots)
q()
library(rEEMSplots)
?eems.plots
q()
library(rEEMSplots)
library(rEEMSplots)
library(rEEMSplots)
q()
library(rEEMSplots)
library(rEEMSplots)
